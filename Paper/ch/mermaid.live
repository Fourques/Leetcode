╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                             S P T - G a u s s   ( Overview )                                         ║
╠════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║                                                                                                                       
║  (a) Inputs & Calibration                                   (b) Teacher (frozen)                    (c) Student / Rendering
║  ┌───────────────────────────────┐                           ┌───────────────────────────────┐      ┌───────────────────────────────┐
║  │  RGB frame I_t                │                           │  LSeg                          │      │  3DGS / PVG                   │
║  │  Camera K_t, E_t, timestamp t │───────┐                   │  → pixel feature F_t           │      │  Gaussians {μ,q,s,o,c}        │
║  └───────────────────────────────┘       │                   └───────────────┬───────────────┘      │  Time {v,l,β,τ}               │
║                                          │                                   │                      │  Per-Gaussian f_sem            │
║  (optional) LiDAR init                   │                      (cache, FP16/PCA)                   └───────────────┬───────────────┘
║  ┌───────────────────────────────┐       │                   ┌───────────────────────────────┐                      │
║  │  LiDAR point cloud (init)     │───────┘                   │    Feature Cache (offline)    │                      │
║  └───────────────────────────────┘                           └───────────────────────────────┘                      │
║                                                                                                                     │
║                                                                               ┌─────────────────────────────────────┴─────────────────────────────────────┐
║                                                                               │                                                                         │
║                                                                               │   (d) Dual-Evidence Motion Mask (DEMM)                                   │
║            Semantic render                                                    │   ┌───────────────────────────────────────────────────────────────────┐   │
║   ┌───────────────────────────────┐       RGB render                           │   │  Discrepancy:  D(p,t) = 1 − cos(  𝐹̃_s , F_t )                   │   │
║   │  𝐹̃_s(p,t)= U(Σ α_i f_sem,i ) │◄─────┐  ┌───────────────────────────────┐  │   │  Semantic prior:  M_sem(p,t) (from LSeg class scores)           │   │
║   └───────────────────────────────┘      │  │   Î_t  (α-composited RGB)     │  │   │  Fuse:  δ(p,t)=σ( a(1−D) + b·M_sem + c ) → {M_stat, M_dyn}     │   │
║                                          └──│   (projection + α-blending)   │──┼───┴───────────────────────────────────────────────────────────────────┘   │
║                                             └───────────────────────────────┘  │                    │                                 ▲                   │
║                                                                               │                    │ (back-project)                  │                   │
║                                                                               │                    ▼                                 │                   │
║                                                                               │         w_i^stat (per-Gaussian static weight)        │                   │
║                                                                               │                                                                         │
║                                                                               └─────────────────────────────────────┬─────────────────────────────────────┘
║                                                                                                                     │
║                                                                                                                     │
║                                                                                          (e) Temporal Constraints (SVC / SLP)
║                                                                                          ┌──────────────────────────────────────────────┐
║                                                                                          │  SVC: g_i=σ(w_g^T f_sem,i + b_g),           │
║                                                                                          │       v_eff = g_i · v   (velocity gating)   │
║                                                                                          │  SLP: ρ_i = β_i / l_i  (static lifetime)    │
║                                                                                          │       minimize max(0, ρ* − ρ_i) weighted    │
║                                                                                          │       by w_i^stat                           │
║                                                                                          └───────────────┬──────────────────────────────┘
║                                                                                                          │
║                                                                                               ┌──────────▼──────────┐
║                                                                                               │  V(p,t)  (speed map)│
║                                                                                               └──────────┬──────────┘
║                                                                                                          │
║                                                                  (f) Losses & Optimization               │
║                                                                  ┌────────────────────────────────────────┴───────────────────────────────────┐
║                                                                  │  L_rgb (L1+SSIM on Î_t)  +  L_SD (L1 on 𝐹̃_s vs F_t)                      │
║                                                                  │  +  L_v = mean( δ · V )  +  L_ρ  +  L_reg  →  Total 𝓛 (warm-up schedule) │
║                                                                  │  Optimizer: Adam  (cosine LR, grad-clip)                                  │
║                                                                  └────────────────────────────────────────────────────────────────────────────┘
║
║  (g) Inference / Export
║  ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
║  │  Freeze parameters → render arbitrary view/time (K',E',t') → RGB frames; optional: semantic features, M_stat/M_dyn, speed map V(p,t')   │
║  └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
║
╠════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
║ Legend:  𝐹̃_s — student semantic render;  F_t — teacher feature;  α — visibility weights;  δ — soft static prob.;    ║
║          SVC — semantic velocity constraint;  SLP — static lifetime prior;  w_i^stat — per-Gaussian static weight.     ║
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
